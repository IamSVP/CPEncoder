CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
PROJECT(CPEncoder CXX C)

SET(CPEncoder_MAJOR_VERSION 0)
SET(CPEncoder_MINOR_VERSION 0)
SET(CPEncoder_PATCH_VERSION 1)
SET(CPEncoder_VERSION ${CPEncoder_MAJOR_VERSION}.${CPEncoder_MINOR_VERSION}.${CPEncoder_PATCH_VERSION})
OPTION(TREAT_WARNINGS_AS_ERRORS "Treat compiler warnings as errors. We use the highest warnings levels for compilers." OFF)

IF(MSVC)
	SET(MSVC_INSTALL_PATH "${PROJECT_SOURCE_DIR}/Windows")
	SET(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${MSVC_INSTALL_PATH}")

	IF(MSVC10)
		SET(MSVC_VERSION_STRING vc100)
	ELSEIF(MSVC11)
		SET(MSVC_VERSION_STRING vc110)
	ELSEIF(MSVC12)
		SET(MSVC_VERSION_STRING vc120)
	ELSEIF(MSVC90)
		SET(MSVC_VERSION_STRING vc90)
	ELSEIF(MSVC80)
		SET(MSVC_VERSION_STRING vc80)
	ENDIF()

	# !FIXME! Actually detect compiler architecture version....
	IF( CMAKE_SIZEOF_VOID_P EQUAL 8 )
		SET(MSVC_ARCHITECTURE_STRING x64)
	ELSE()
		SET(MSVC_ARCHITECTURE_STRING x86)
	ENDIF()

	SET(MSVC_LIB_DIR "${MSVC_INSTALL_PATH}/lib/${MSVC_ARCHITECTURE_STRING}/${MSVC_VERSION_STRING}")
	SET(CMAKE_LIBRARY_PATH "${CMAKE_LIBRARY_PATH};${MSVC_LIB_DIR}")

  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")

ELSEIF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)

  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -fms-extensions")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fms-extensions")

ENDIF(MSVC)

IF(TREAT_WARNINGS_AS_ERRORS)
  IF(MSVC)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /WX")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX")
  ELSEIF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Werror")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
  ENDIF(MSVC)
ENDIF(TREAT_WARNINGS_AS_ERRORS)

SET(CMAKE_MODULE_PATH "${CPEncoder_SOURCE_DIR}/CMakeModules" ${CMAKE_MODULE_PATH})




SET(INCLUDE_INSTALL_DIR include CACHE INTERNAL "")
SET(LIB_INSTALL_DIR lib CACHE INTERNAL "")
SET(BIN_INSTALL_DIR bin CACHE INTERNAL "")

SET(CPENOCDER_DIRECTORIES ColorPrecision)
ADD_SUBDIRECTORY(ColorPrecision)

SET(CPEncoder_LIBRARIES ColorPrecision)



######################################################################
##
## Config
##
######################################################################

INCLUDE(CMakePackageConfigHelpers)
CONFIGURE_PACKAGE_CONFIG_FILE(
  "${CPEncoder_SOURCE_DIR}/CMakeModules/CPEncoderConfig.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/CPEncoderConfig.cmake"
  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/cmake/CPEncoder
  PATH_VARS INCLUDE_INSTALL_DIR BIN_INSTALL_DIR LIB_INSTALL_DIR)

WRITE_BASIC_PACKAGE_VERSION_FILE(
  "${CMAKE_CURRENT_BINARY_DIR}/CPEncoderConfigVersion.cmake"
  VERSION ${CPEncoder_VERSION}
  COMPATIBILITY SameMajorVersion)

INSTALL(
  FILES "${CMAKE_CURRENT_BINARY_DIR}/CPEncoderConfigVersion.cmake" "${CMAKE_CURRENT_BINARY_DIR}/CPEncoderConfig.cmake"
  DESTINATION ${LIB_INSTALL_DIR}/cmake/CPEncoder
  COMPONENT dev)

EXPORT(
  TARGETS ${CPEncoder_LIBRARIES} ${CPEncoder_EXECUTABLES}
  FILE "${CMAKE_CURRENT_BINARY_DIR}/CPEncoderTargets.cmake")
EXPORT(PACKAGE CPEncoder)

INSTALL(
  EXPORT CPEncoderTargets
  FILE CPEncoderTargets.cmake
  DESTINATION ${LIB_INSTALL_DIR}/cmake/CPEncoder)


  ######################################################################
##
## Testing
##
######################################################################

ENABLE_TESTING()


